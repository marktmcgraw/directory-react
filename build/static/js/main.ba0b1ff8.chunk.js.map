{"version":3,"sources":["components/Filter.js","components/Sort.js","components/Table.js","components/Row.js","employeeData.js","index.js","App.js"],"names":["Filter","props","className","type","value","onChange","target","checked","Sort","Table","Row","id","name","department","title","salary","email","employees","ReactDOM","render","useState","sortBy","setSortBy","isFiltered","setIsFiltered","filter","toLocaleLowerCase","search","map","key","sort","sortedArray","a","b","document","getElementById"],"mappings":"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","file":"static/js/main.ba0b1ff8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default function Filter(props) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <input\n            type=\"checkbox\"\n            value=\"manager\"\n            \n            onChange={({ target }) => props.onChange(target.checked)}\n          />\n          <label className=\"m-1\">Display Managers Only</label>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default function Sort(props) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row bg-lightgray text-black p-1\">\n        <div className=\"col-4 mb-1 mx-1\">Sort by </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <select\n            className=\"form-control \"\n            onChange={({ target }) => props.onChange(target.value)}\n          >\n            <option> Department </option>\n            <option> Name </option>\n            <option>ID</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default function Table(props) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row bg-lightgray text-black p-1\">\n        <div className=\"col-1 table-header\">ID</div>\n        <div className=\"col-3 table-header\">Name</div>\n        <div className=\"col-3 table-header\">Department</div>\n        <div className=\"col-2 table-header\">Title</div>\n        <div className=\"col-1 table-header\">Salary</div>\n        <div className=\"col-2 table-header\">E-mail</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import {employees} from \"../employeeData\";\n\nexport default function Row({ id, name, department, title, salary, email }) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row bg-lightgray\">\n        <div className=\"col-1 row-data\">{id}</div>\n        <div className=\"col-3 row-data\">{name}</div>\n        <div className=\"col-3 row-data\">{department}</div>\n        <div className=\"col-2 row-data\">{title}</div>\n        <div className=\"col-1 row-data\">{salary}</div>\n        <div className=\"col-2 row-data\">{email}</div>\n      </div>\n    </div>\n  );\n}\n","export const employees = [\n    {\n        \"id\": \"1\",\n        \"name\": \"Monet Exchange\",\n        \"department\": \"Human Resources\",\n        \"title\": \"Manager\",\n        \"salary\": \"55000\",\n        \"email\": \"monet@company.com\"\n    },\n    {\n        \"id\": \"2\",\n        \"name\": \"Violet Chachki\",\n        \"department\": \"Finance\",\n        \"title\": \"Office Coordinator\",\n        \"salary\": \"47000\",\n        \"email\": \"violet@company.com\" \n    },\n    {\n        \"id\": \"3\",\n        \"name\": \"Katya Zamolochikova\",\n        \"department\": \"Sales\",\n        \"title\": \"Manager\",\n        \"salary\": \"60000\",\n        \"email\": \"katya@company.com\" \n    },\n    {\n        \"id\": \"4\",\n        \"name\": \"Trixie Mattel\",\n        \"department\": \"Web Development\",\n        \"title\": \"Project Manager\",\n        \"salary\": \"70000\",\n        \"email\": \"trixie@company.com\" \n    },\n    {\n        \"id\": \"5\",\n        \"name\": \"Kennedy Davenport\",\n        \"department\": \"Admin\",\n        \"title\": \"CFO\",\n        \"salary\": \"90000\",\n        \"email\": \"kennedy@company.com\" \n    },\n    {\n        \"id\": \"6\",\n        \"name\": \"Dita Ritz\",\n        \"department\": \"Operations\",\n        \"title\": \"Manager\",\n        \"salary\": \"75000\",\n        \"email\": \"dita@company.com\" \n    },\n    {\n        \"id\": \"7\",\n        \"name\": \"Jasmine Masters\",\n        \"department\": \"Human Resources\",\n        \"title\": \"Assistant Manager\",\n        \"salary\": \"45000\",\n        \"email\": \"jasmine@company.com\" \n    },\n    {\n        \"id\": \"8\",\n        \"name\": \"Naomi Smalls\",\n        \"department\": \"Web Development\",\n        \"title\": \"Junior Developer\",\n        \"salary\": \"57000\",\n        \"email\": \"naomi@company.com\" \n    },\n    {\n        \"id\": \"9\",\n        \"name\": \"Kim Chi Chic\",\n        \"department\": \"Operations\",\n        \"title\": \"Office Coordinator\",\n        \"salary\": \"45000\",\n        \"email\": \"kimchi@company.com\" \n    },\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n","import React, { useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Sort from \"./components/Sort\";\nimport Table from \"./components/Table\";\nimport Row from \"./components/Row\";\nimport \"./App.css\";\n\nimport { employees } from \"./employeeData\";\n\nexport default function App() {\n  const [sortBy, setSortBy] = useState(\"ID\");\n  const [isFiltered, setIsFiltered] = useState(false);\n\n  function handleSortOnChange(value) {\n    setSortBy(value);\n  }\n  function handleFilterCheck(checked) {\n    return checked ? setIsFiltered(true) : setIsFiltered(false);\n  }\n\n  function render() {\n    if (sortBy === \"ID\") {\n      if (isFiltered) return filter();\n      else return sort(\"ID\");\n    }\n    if (sortBy === \"Department\") {\n      if (isFiltered) return filter();\n      else return sort(\"Department\");\n    }\n    if (sortBy === \"Name\") {\n      if (isFiltered) return filter();\n      else return sort(\"Name\");\n    }\n  }\n\n  function filter() {\n    let filteredArray = [];\n    filteredArray = employees.filter(\n      employees => employees.title.toLocaleLowerCase().search(\"manager\") >= 0\n    );\n    return filteredArray.map(employees => (\n      <Row\n        id={employees.id}\n        key={employees.id}\n        name={employees.name}\n        department={employees.department}\n        title={employees.title}\n        salary={employees.salary}\n        email={employees.email}\n      />\n    ));\n  }\n\n  function sort(sortBy) {\n    let sortedArray = [];\n    switch (sortBy) {\n      case \"Department\":\n        sortedArray = employees.sort((a, b) =>\n          a.department > b.department ? 1 : b.department > a.department ? -1 : 0\n        );\n        break;\n      case \"Name\":\n        sortedArray = employees.sort((a, b) =>\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n        );\n        break;\n      case \"ID\":\n        sortedArray = employees.sort((a, b) =>\n          a.id > b.id ? 1 : b.id > a.id ? -1 : 0\n        );\n        break;\n      default:\n    }\n\n    return sortedArray.map(employees => (\n      <Row\n        id={employees.id}\n        key={employees.id}\n        name={employees.name}\n        department={employees.department}\n        title={employees.title}\n        salary={employees.salary}\n        email={employees.email}\n      />\n    ));\n  }\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Employee Directory</h1>\n      <div className=\"container-fluid\">\n        <Sort onChange={handleSortOnChange} />\n        <Filter onChange={handleFilterCheck} />\n        <Table />\n        {render()}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}